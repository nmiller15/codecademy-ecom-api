openapi: 3.0.0
info:
  title: Codecademy E-Commerce API
  description: This REST API is a project for the Back-End section on Codecademy
  version: 0.0.0
servers:
- url: /
paths:
  /login:
    summary: Login to user account.
    description: This path accepts a username and password and will return a valid
      cookie to allow the login of a user.
    post:
      tags:
      - Account Access
      summary: Login to a user account
      description: Send username and password to receive a token that validates login
        status.
      operationId: login
      responses:
        "200":
          description: "User has successfully logged in.' content: application/json:\
            \ examples: Successful Login: value: |- { \"Successful login.\" } "
        "404'":
          description: User account could not be found.
          content:
            application/json:
              examples:
                User account not created.:
                  value: "{\"No matching username.\"}"
      x-swagger-router-controller: AccountAccess
  /register:
    summary: Create a user.
    description: "Send all necessary information to the API, and the server will respond\
      \ with a token and create a user in the database."
    post:
      tags:
      - Account Access
      summary: Add a new user.
      description: Send all user information and a new user will be created in the
        database with a login session validated.
      operationId: register
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: AccountAccess
  /user:
    summary: Return all users
    description: Retreive a list of all users from the database and return their usernames
      and contact information.
    get:
      tags:
      - Users
      summary: Get a list of all users
      description: Retrieve a list of all users currently stored in the database.
      operationId: get_user
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Users
  /users/{userId}:
    summary: Get one user by id.
    description: Retrieve a user by matching the id with a record in the database.
      Returns the user information.
    get:
      tags:
      - Users
      - Account Access
      summary: Get a single user profile
      description: Retrieve the profile information for a user using a matching id.
      operationId: get_user_id
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Users
    put:
      tags:
      - Users
      summary: Edit user
      description: Update the contact information associated with a user account by
        matching id
      operationId: put_user_id
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Users
    delete:
      tags:
      - Users
      summary: Remove a user profile
      description: Remove a user profile from the database of users.
      operationId: delete_user_id
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Users
  /users/{userId}/cart:
    summary: Get a users cart.
    description: Retrieve the cart and a list of products from the databse by a matching
      user id.
    get:
      tags:
      - Cart
      summary: Get user cart.
      description: Retrieve the contents of a user's cart by matching a user id.
      operationId: get_user_id_cart
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Cart
    post:
      tags:
      - Cart
      summary: Add product to cart.
      description: "Add a product, identified by its id, to a cart, identified by\
        \ matching user id."
      operationId: post_user_id_cart
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Cart
    delete:
      tags:
      - Cart
      summary: Remove item(s)
      description: Remove one item from a cart by matching one or more product codes
        in the request body.
      operationId: delete_user_id_cart
      parameters:
      - name: userId
        in: path
        description: A unique number belonging to each user.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Cart
  /products:
    summary: Get all products.
    description: Retrieve all products currently in the database.
    get:
      tags:
      - Products
      summary: Get a list of all products
      description: Retrieve a list of all the products currently in the database.
      operationId: get_products
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Products
    post:
      tags:
      - Products
      summary: Add a product
      description: Submit all product information in an object to be added to the
        database.
      operationId: products_post
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Products
  /products/{productId}:
    summary: Get a single product.
    description: Retrieve a single product from the database by id.
    get:
      tags:
      - Products
      summary: Get a single product
      description: Retrieve a single product by a matching id.
      operationId: get_products_id
      parameters:
      - name: productId
        in: path
        description: Product code identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Products
    put:
      tags:
      - Products
      summary: Edit a product
      description: Edit the data of a product retrieved through a matching id.
      operationId: put_products_id
      parameters:
      - name: productId
        in: path
        description: Product code identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Products
    delete:
      tags:
      - Products
      summary: Remove a product.
      description: Revote a product from the database by matching an id.
      operationId: delete_products_id
      parameters:
      - name: productId
        in: path
        description: Product code identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Products
  /orders:
    summary: Get all orders
    description: Retrieve a list of all orders from every user in the database.
    get:
      tags:
      - Orders
      summary: Get all orders.
      description: Retrieve a list of all orders in the database.
      operationId: get_orders
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Orders
    post:
      tags:
      - Orders
      summary: Add an order
      description: Create an order from a list of products to be added to the database
        for tracking.
      operationId: post_orders
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Orders
  /orders/{orderNum}:
    summary: Get orders by customer
    description: Retrieve a list of the order history of a user with a matching user
      id.
    get:
      tags:
      - Orders
      summary: Get single order
      description: Retrieve a single order from the database with its status and list
        of products.
      operationId: get_orders_id
      parameters:
      - name: orderNum
        in: path
        description: Number associated with the order.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Orders
    put:
      tags:
      - Orders
      summary: Edit existing order.
      description: Make changes to the products on an order with status is not shipped.
      operationId: put_orders_id
      parameters:
      - name: orderNum
        in: path
        description: Number associated with the order.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: Orders
  /logout:
    summary: Log out of user profile
    description: Invalidate the token that verifies the login of a user.
    post:
      tags:
      - Account Access
      summary: Log out of user profile
      description: Invalidate the token used to verify user session by sending username.
      operationId: logout
      responses:
        default:
          description: Default error sample response
      x-swagger-router-controller: AccountAccess
components: {}
